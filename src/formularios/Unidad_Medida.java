/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package formularios;

import java.awt.event.KeyEvent;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import prg.conex;

/**
 *
 * @author utic
 */
public class Unidad_Medida extends javax.swing.JDialog {
// COMENTARIO POR LINE   

    /**
     * COMENTARIO EXTENDIDO O DE MUCHAS LINEAS
     */
    conex con; //LLAMAR AL MÉTODO conexión 
    ResultSet rs;//Llamar al método de resultados

    javax.swing.table.DefaultTableModel cursor; //CREAR EL CURSOR QUE VA A CARGAR LA TABLA
            
    String operacion=""; //VARIABLE PARA ESTABLECER LAS OPERACIONES(AGREGAR , MODIFICAR O ELIMINAR)
    
    public Unidad_Medida(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.setLocationRelativeTo(this);
        con =new conex(); //INSTANCIAR LA CONEXIÓN
        con.conectar();//UTILIZAR EL METODO PARA CONECTAR
        cargar_grilla();
        this.deshab_inicio();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelNice1 = new org.edisoncor.gui.panel.PanelNice();
        panelCurves1 = new org.edisoncor.gui.panel.PanelCurves();
        jPanel1 = new javax.swing.JPanel();
        labelMetric1 = new org.edisoncor.gui.label.LabelMetric();
        labelMetric2 = new org.edisoncor.gui.label.LabelMetric();
        codigo = new org.edisoncor.gui.textField.TextFieldRectBackground();
        descrip = new org.edisoncor.gui.textField.TextFieldRectBackground();
        jScrollPane1 = new javax.swing.JScrollPane();
        grilla = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        agregar = new javax.swing.JButton();
        borrar = new javax.swing.JButton();
        modificar = new javax.swing.JButton();
        guardar = new javax.swing.JButton();
        cancelar = new javax.swing.JButton();
        salir = new org.edisoncor.gui.button.ButtonNice();
        buscar = new javax.swing.JTextField();
        btnbuscar = new javax.swing.JToggleButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        panelNice1.setBackground(new java.awt.Color(64, 120, 201));

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Unidad de Medida", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial Black", 1, 18))); // NOI18N
        jPanel1.setOpaque(false);

        labelMetric1.setText("Código:");
        labelMetric1.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N

        labelMetric2.setText("Descripción:");
        labelMetric2.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N

        codigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                codigoActionPerformed(evt);
            }
        });

        descrip.setDescripcion("ingreseel texto aquí");
        descrip.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                descripActionPerformed(evt);
            }
        });
        descrip.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                descripKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                descripKeyTyped(evt);
            }
        });

        grilla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Descripción"
            }
        ));
        jScrollPane1.setViewportView(grilla);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Acciones", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));
        jPanel2.setOpaque(false);

        agregar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/nuevo1.png"))); // NOI18N
        agregar.setText("AGREGAR");
        agregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregarActionPerformed(evt);
            }
        });

        borrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/borrar.png"))); // NOI18N
        borrar.setText("BORRAR");
        borrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                borrarActionPerformed(evt);
            }
        });

        modificar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/modificar1.png"))); // NOI18N
        modificar.setText("MODIFICAR");
        modificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modificarActionPerformed(evt);
            }
        });

        guardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/guardar.png"))); // NOI18N
        guardar.setText("GUARDAR");
        guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarActionPerformed(evt);
            }
        });

        cancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/cancel-24.gif"))); // NOI18N
        cancelar.setText("CANCELAR");
        cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(agregar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(borrar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(guardar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cancelar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(modificar)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(agregar)
                .addGap(32, 32, 32)
                .addComponent(modificar)
                .addGap(30, 30, 30)
                .addComponent(borrar, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(guardar, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(cancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        salir.setBackground(new java.awt.Color(79, 219, 14));
        salir.setForeground(new java.awt.Color(4, 2, 2));
        salir.setText("SALIR");
        salir.setSegundoColor(new java.awt.Color(232, 31, 31));
        salir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salirActionPerformed(evt);
            }
        });

        buscar.setBorder(javax.swing.BorderFactory.createTitledBorder("Bucar"));
        buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarActionPerformed(evt);
            }
        });

        btnbuscar.setText("Buscar");
        btnbuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnbuscarActionPerformed(evt);
            }
        });
        btnbuscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnbuscarKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(labelMetric2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(descrip, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(49, 49, 49)
                                        .addComponent(labelMetric1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(codigo, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(31, 31, 31)
                                        .addComponent(buscar, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(27, 27, 27)
                                        .addComponent(btnbuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(salir, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 351, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)))
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(salir, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelMetric1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(codigo, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(labelMetric2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(descrip, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(39, 39, 39)
                                .addComponent(buscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(btnbuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 24, Short.MAX_VALUE))
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        panelCurves1.add(jPanel1, java.awt.BorderLayout.CENTER);

        panelNice1.add(panelCurves1, java.awt.BorderLayout.CENTER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelNice1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelNice1, javax.swing.GroupLayout.PREFERRED_SIZE, 441, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void codigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_codigoActionPerformed
        buscar_descrip();
        codigo.setEnabled(false);
        descrip.setEnabled(true);
        descrip.requestFocus();
    }//GEN-LAST:event_codigoActionPerformed

    private void descripActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_descripActionPerformed
        descrip.setEnabled(false);//habilitar campo descrip
        guardar.setEnabled(true);//habilitar botón guardar
        guardar.requestFocus();//enviar el cursor en el botón
    }//GEN-LAST:event_descripActionPerformed

    private void descripKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_descripKeyPressed
        if (evt.getKeyChar() == KeyEvent.VK_ENTER) {//cuando el evento del teclado fue enter
            if (descrip.getText().equals("")) {//getTex leer el texto es igual a vacio
                JOptionPane.showMessageDialog(null, "NO DEBE DEJAR EL CAMPO VACIO");
                descrip.requestFocus();//situar el cursor el descrip
            }
        }
    }//GEN-LAST:event_descripKeyPressed

    private void descripKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_descripKeyTyped

    }//GEN-LAST:event_descripKeyTyped

    private void agregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregarActionPerformed
        this.operacion="agregar";
        this.deshab_botones(1);
        generar_codigo();
        this.descrip.setEnabled(true);
        this.descrip.requestFocus();
    }//GEN-LAST:event_agregarActionPerformed

    private void borrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_borrarActionPerformed
        this.operacion="Borrar";
        JOptionPane.showMessageDialog(this,"Ingrese el código del registro a eliminar");
        codigo.setEnabled(true);
        codigo.requestFocus();
    }//GEN-LAST:event_borrarActionPerformed

    private void modificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modificarActionPerformed
        this.operacion="Modificar";
        JOptionPane.showMessageDialog(this,"Ingrese el código del registro a modificar");
        codigo.setEnabled(true);
        codigo.requestFocus();
    }//GEN-LAST:event_modificarActionPerformed

    private void guardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarActionPerformed
        int mensaje =JOptionPane.showConfirmDialog(this, "Deseas Confirmar la acción","Atención",JOptionPane.YES_NO_OPTION);
        if(mensaje ==JOptionPane.YES_OPTION){
            this.guardar();
            this.limpiar_grilla();
            this.cargar_grilla();
            this.deshab_botones(2);
            this.deshab_inicio();
            limpiar_txt();

        }
    }//GEN-LAST:event_guardarActionPerformed

    private void cancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelarActionPerformed
        this.deshab_botones(2);
        this.deshab_inicio();
        limpiar_txt();
    }//GEN-LAST:event_cancelarActionPerformed

    private void salirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salirActionPerformed
        int mensaje = JOptionPane.showConfirmDialog(this, "Deseas Salir", "Atención", JOptionPane.YES_NO_OPTION);
        if (mensaje == JOptionPane.YES_OPTION) {

            dispose();//salir completamente del sistema
            //   dispose();//cerrar ventana pero el sistema sigue ejecutandose
        }
    }//GEN-LAST:event_salirActionPerformed

    private void buscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarActionPerformed
        this.btnbuscar.setEnabled(true);
        btnbuscar.requestFocus();
    }//GEN-LAST:event_buscarActionPerformed

    private void btnbuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnbuscarActionPerformed
        limpiar_grilla();
        this.buscar();
    }//GEN-LAST:event_btnbuscarActionPerformed

    private void btnbuscarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnbuscarKeyPressed
        limpiar_grilla();
        this.buscar();
    }//GEN-LAST:event_btnbuscarKeyPressed

    /**'''
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Unidad_Medida.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Unidad_Medida.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Unidad_Medida.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Unidad_Medida.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Unidad_Medida dialog = new Unidad_Medida(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    
    private void deshab_inicio(){
        this.codigo.setEnabled(false);
        this.descrip.setEnabled(false);
        this.guardar.setEnabled(false);
    }
    
    private void deshab_botones(int a){
        switch(a){
            case 1:
                this.agregar.setEnabled(false);
                this.modificar.setEnabled(false);
                this.borrar.setEnabled(false);
                this.salir.setEnabled(false);
                break;
            case 2:
                this.agregar.setEnabled(true);
                this.modificar.setEnabled(true);
                this.borrar.setEnabled(true);
                this.salir.setEnabled(true);
                break;
        }
    }
   private void limpiar_txt(){
       codigo.setText("");
       descrip.setText("");
   }
   
   private void generar_codigo(){
        try {
            String sql="SELECT COALESCE (max(id_u_medida),0)+1 as cod from u_medida;";
            rs=con.Listar(sql);//devolver en rs el resultado del primer registro
            rs.next();//devuelve todos los valores del resultado
            this.codigo.setText(rs.getString("cod"));
        } catch (SQLException ex) {
            Logger.getLogger(Unidad_Medida.class.getName()).log(Level.SEVERE, null, ex);
        }
   }
   
   private void guardar(){
        try {
            String sql="";
            if("agregar".equals(operacion)){
                
                sql = "insert into u_medida values(" + codigo.getText() + ",'"+descrip.getText().toUpperCase()+"')";
                System.out.println(sql);//visualizar lo que se está ejecutando
            }
            
            if ("Modificar".equals(operacion)) {
                sql = "update u_medida set u_descrip='" + descrip.getText().toUpperCase() + "'"
                        + " where id_u_medida=" + codigo.getText() + "";
                System.out.println(sql);
                JOptionPane.showMessageDialog(this, "Modificado Correctamente");
            }
            if ("Borrar".equals(operacion)) {
                sql = "delete from u_medida where id_u_medida=" + codigo.getText() + "";
                System.out.println(sql);
                JOptionPane.showMessageDialog(this, "Borrado Correctamente");
            }
           
                
            con.sentencia=con.conectar().createStatement();
            con.sentencia.executeUpdate(sql);
        } catch (SQLException ex) {
            Logger.getLogger(Unidad_Medida.class.getName()).log(Level.SEVERE, null, ex);
        }
           
   
                
    }
   
        private void cargar_grilla(){
        try {
            cursor= (DefaultTableModel) grilla.getModel();//asingar cursor a la tabla
            String sql="select *from u_medida order by id_u_medida";//consulta p cargar tabla
            rs=con.Listar(sql);// guarda los resultados del select en rs
            
            String [] fila=  new String [2];//definir array para guardar los id y descrip de la consulta
            
            while (rs.next()){//va a cargar con los valores del resultado (rs) optenido en la consulta
                fila[0]=rs.getString("id_u_medida");//datos de la fila 0= id's
                fila[1]=rs.getString("u_descrip"); //datos de la fila las descrip's
                cursor.addRow(fila);//cargar en con el cursor los valores en la tabla
            }
        } catch (SQLException ex) {
            Logger.getLogger(Unidad_Medida.class.getName()).log(Level.SEVERE, null, ex);
        }
        }
   
        private void limpiar_grilla(){
            cursor= (DefaultTableModel) grilla.getModel();//asignar el cursor a la tabla
            
            while(cursor.getRowCount()>0 ){ //contar la cantidad de elementos hasta 0
                cursor.removeRow(0);//eliminar datos hasta que se quede en 0
            }
        }
        
     
        private void buscar_descrip(){
        try {
            String sql="select u_descrip as descripcion from u_medida where id_u_medida="+codigo.getText();
            rs = con.Listar(sql);// Devolver en rs(variable), el resultado del primer registro
            rs.next();//devuelve todos los valores del resultado
            this.descrip.setText(rs.getString("descripcion"));
        } catch (SQLException ex) {
            Logger.getLogger(deposito.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private void verdatos() {
        int fila = grilla.getSelectedRow();
        codigo.setText(grilla.getValueAt(fila, 0).toString());
        descrip.setText(grilla.getValueAt(fila, 1).toString());

    }
    
    private void buscar() {
        try {
            cursor = (DefaultTableModel) this.grilla.getModel();//asignacion del modelo de la tabla al cursor creado
            String sql = "select * from u_medida where u_descrip like '%"+buscar.getText().toUpperCase()+"%' order by id_ciudad";
            rs = con.Listar(sql);
            String[] fila1 = new String[2];//definimos la cantidad que poseera el array[]
            
            while (rs.next()) {
                fila1[0] = rs.getString("id_u_medida");
                fila1[1] = rs.getString("u_descrip");
                cursor.addRow(fila1);//agrega filas mientras que exista datos
            }
        } catch (SQLException ex) {
            Logger.getLogger(deposito.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private void validar_descripcion() {
        try {
            rs = con.Listar("SELECT * FROM u_medida WHERE u_descrip = '"
                    + this.descrip.getText().toUpperCase() + "'");
            boolean encontro = rs.next();
            if (encontro == true) {
                JOptionPane.showMessageDialog(null, "La descripcion de la ciudad   "
                        + descrip.getText() + "   ya se encuentra registrada");
               // this.habilitar(1);
            } else {
              guardar();
            }
        } catch (SQLException ex) {
            Logger.getLogger(deposito.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton agregar;
    private javax.swing.JButton borrar;
    private javax.swing.JToggleButton btnbuscar;
    private javax.swing.JTextField buscar;
    private javax.swing.JButton cancelar;
    private org.edisoncor.gui.textField.TextFieldRectBackground codigo;
    private org.edisoncor.gui.textField.TextFieldRectBackground descrip;
    private javax.swing.JTable grilla;
    private javax.swing.JButton guardar;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private org.edisoncor.gui.label.LabelMetric labelMetric1;
    private org.edisoncor.gui.label.LabelMetric labelMetric2;
    private javax.swing.JButton modificar;
    private org.edisoncor.gui.panel.PanelCurves panelCurves1;
    private org.edisoncor.gui.panel.PanelNice panelNice1;
    private org.edisoncor.gui.button.ButtonNice salir;
    // End of variables declaration//GEN-END:variables
}
