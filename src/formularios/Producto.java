/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package formularios;

import java.awt.event.KeyEvent;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import prg.conex;

/**
 *
 * @author utic
 */
public class Producto extends javax.swing.JDialog {
// COMENTARIO POR LINE   

    /**
     * COMENTARIO EXTENDIDO O DE MUCHAS LINEAS
     */
    conex con; //LLAMAR AL MÉTODO conexión 
    ResultSet rs;//Llamar al método de resultados

    javax.swing.table.DefaultTableModel cursor; //CREAR EL CURSOR QUE VA A CARGAR LA TABLA

    int operacion = 0; //VARIABLE PARA ESTABLECER LAS OPERACIONES(AGREGAR , MODIFICAR O ELIMINAR)

    public Producto(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.setLocationRelativeTo(this);
        con = new conex(); //INSTANCIAR LA CONEXIÓN
        con.conectar();//UTILIZAR EL METODO PARA CONECTAR
        cargar_grilla();
        this.deshab_inicio();
        llenar_combo_t_p("0");
        llenar_combo_um("0");
        buscar.requestFocus();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelNice1 = new org.edisoncor.gui.panel.PanelNice();
        panelCurves1 = new org.edisoncor.gui.panel.PanelCurves();
        jPanel1 = new javax.swing.JPanel();
        labelMetric1 = new org.edisoncor.gui.label.LabelMetric();
        labelMetric2 = new org.edisoncor.gui.label.LabelMetric();
        codigo = new org.edisoncor.gui.textField.TextFieldRectBackground();
        descrip = new org.edisoncor.gui.textField.TextFieldRectBackground();
        jScrollPane1 = new javax.swing.JScrollPane();
        grilla = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        agregar = new javax.swing.JButton();
        borrar = new javax.swing.JButton();
        modificar = new javax.swing.JButton();
        guardar = new javax.swing.JButton();
        cancelar = new javax.swing.JButton();
        salir = new org.edisoncor.gui.button.ButtonNice();
        buscar = new javax.swing.JTextField();
        btnbuscar = new javax.swing.JToggleButton();
        cbotp = new javax.swing.JComboBox();
        labelMetric3 = new org.edisoncor.gui.label.LabelMetric();
        cboum = new javax.swing.JComboBox();
        labelMetric4 = new org.edisoncor.gui.label.LabelMetric();
        labelMetric5 = new org.edisoncor.gui.label.LabelMetric();
        precio = new org.edisoncor.gui.textField.TextFieldRectBackground();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        panelNice1.setBackground(new java.awt.Color(64, 120, 201));

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Producto", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial Black", 1, 18))); // NOI18N
        jPanel1.setOpaque(false);

        labelMetric1.setText("Código:");
        labelMetric1.setFont(new java.awt.Font("Arial", 1, 15)); // NOI18N

        labelMetric2.setText("Tipo de Producto:");
        labelMetric2.setFont(new java.awt.Font("Arial", 1, 15)); // NOI18N

        codigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                codigoActionPerformed(evt);
            }
        });

        descrip.setDescripcion("ingreseel texto aquí");
        descrip.setEnabled(false);
        descrip.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                descripActionPerformed(evt);
            }
        });
        descrip.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                descripKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                descripKeyTyped(evt);
            }
        });

        grilla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "T_p_codigo", "T. Produc", "U_M_codigo", "U. Medida", "Descripción", "Precio"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, false, true, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        grilla.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                grillaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(grilla);
        if (grilla.getColumnModel().getColumnCount() > 0) {
            grilla.getColumnModel().getColumn(1).setMinWidth(0);
            grilla.getColumnModel().getColumn(1).setPreferredWidth(0);
            grilla.getColumnModel().getColumn(1).setMaxWidth(0);
            grilla.getColumnModel().getColumn(2).setResizable(false);
            grilla.getColumnModel().getColumn(3).setMinWidth(0);
            grilla.getColumnModel().getColumn(3).setPreferredWidth(0);
            grilla.getColumnModel().getColumn(3).setMaxWidth(0);
            grilla.getColumnModel().getColumn(4).setResizable(false);
            grilla.getColumnModel().getColumn(5).setResizable(false);
            grilla.getColumnModel().getColumn(6).setResizable(false);
        }

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Acciones", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));
        jPanel2.setOpaque(false);

        agregar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/nuevo1.png"))); // NOI18N
        agregar.setText("AGREGAR");
        agregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregarActionPerformed(evt);
            }
        });

        borrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/borrar.png"))); // NOI18N
        borrar.setText("BORRAR");
        borrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                borrarActionPerformed(evt);
            }
        });

        modificar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/modificar1.png"))); // NOI18N
        modificar.setText("MODIFICAR");
        modificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modificarActionPerformed(evt);
            }
        });

        guardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/guardar.png"))); // NOI18N
        guardar.setText("GUARDAR");
        guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarActionPerformed(evt);
            }
        });

        cancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/cancel-24.gif"))); // NOI18N
        cancelar.setText("CANCELAR");
        cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(agregar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(borrar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(guardar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cancelar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(modificar)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(agregar)
                .addGap(32, 32, 32)
                .addComponent(modificar)
                .addGap(30, 30, 30)
                .addComponent(borrar, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                .addComponent(guardar, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(cancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        salir.setBackground(new java.awt.Color(79, 219, 14));
        salir.setForeground(new java.awt.Color(4, 2, 2));
        salir.setText("SALIR");
        salir.setSegundoColor(new java.awt.Color(232, 31, 31));
        salir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salirActionPerformed(evt);
            }
        });

        buscar.setBorder(javax.swing.BorderFactory.createTitledBorder("Bucar"));
        buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarActionPerformed(evt);
            }
        });

        btnbuscar.setText("Buscar");
        btnbuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnbuscarActionPerformed(evt);
            }
        });
        btnbuscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnbuscarKeyPressed(evt);
            }
        });

        cbotp.setEnabled(false);
        cbotp.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cbotpMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                cbotpMousePressed(evt);
            }
        });
        cbotp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbotpActionPerformed(evt);
            }
        });
        cbotp.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cbotpKeyPressed(evt);
            }
        });

        labelMetric3.setText("Unidad de Medida");
        labelMetric3.setFont(new java.awt.Font("Arial", 1, 15)); // NOI18N

        cboum.setEnabled(false);
        cboum.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                cboumMousePressed(evt);
            }
        });
        cboum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboumActionPerformed(evt);
            }
        });
        cboum.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cboumKeyPressed(evt);
            }
        });

        labelMetric4.setText("Descripción:");
        labelMetric4.setFont(new java.awt.Font("Arial", 1, 15)); // NOI18N

        labelMetric5.setText("Precio:");
        labelMetric5.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N

        precio.setDescripcion("ingreseel texto aquí");
        precio.setEnabled(false);
        precio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                precioActionPerformed(evt);
            }
        });
        precio.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                precioKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                precioKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addComponent(salir, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(labelMetric1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(codigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(labelMetric2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(4, 4, 4)
                        .addComponent(cbotp, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addComponent(labelMetric4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(descrip, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addComponent(labelMetric3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(4, 4, 4)
                        .addComponent(cboum, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(labelMetric5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(precio, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(50, 50, 50)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(buscar, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnbuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 497, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(salir, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(41, 41, 41))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(labelMetric1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(codigo, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelMetric2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbotp, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelMetric3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cboum, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelMetric4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(descrip, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(36, 36, 36)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelMetric5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(precio, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(buscar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, Short.MAX_VALUE)
                            .addComponent(btnbuscar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                .addGap(78, 78, 78))
        );

        panelCurves1.add(jPanel1, java.awt.BorderLayout.CENTER);

        panelNice1.add(panelCurves1, java.awt.BorderLayout.CENTER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelNice1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelNice1, javax.swing.GroupLayout.PREFERRED_SIZE, 441, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void codigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_codigoActionPerformed
//        //  buscar_descrip();
//        codigo.setEnabled(false);
//        descrip.setEnabled(true);
//        descrip.requestFocus();
    }//GEN-LAST:event_codigoActionPerformed

    private void descripActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_descripActionPerformed
        descrip.setEnabled(false);//habilitar campo descrip
        precio.setEnabled(true);//habilitar botón guardar
        precio.requestFocus();//enviar el cursor en el botón
    }//GEN-LAST:event_descripActionPerformed

    private void descripKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_descripKeyPressed
        if (evt.getKeyChar() == KeyEvent.VK_ENTER) {//cuando el evento del teclado fue enter
            if (descrip.getText().equals("")) {//getTex leer el texto es igual a vacio
                JOptionPane.showMessageDialog(null, "NO DEBE DEJAR EL CAMPO VACIO");
                descrip.requestFocus();//situar el cursor el descrip
            }
        }
    }//GEN-LAST:event_descripKeyPressed

    private void descripKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_descripKeyTyped

    }//GEN-LAST:event_descripKeyTyped

    private void agregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregarActionPerformed
        this.operacion = 1;
        this.deshab_botones(1);
        generar_codigo();
        this.cbotp.setEnabled(true);
        this.cbotp.requestFocus();
    }//GEN-LAST:event_agregarActionPerformed

    private void borrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_borrarActionPerformed
        if (codigo.getText().equals("")) {
            JOptionPane.showMessageDialog(null,
                    "Debe seleccionar el registro que desea eliminar..");
        } else {
            int mensaje = JOptionPane.showConfirmDialog(null,
                    "Desea borrar los datos?",
                    "Atención", JOptionPane.YES_NO_OPTION);
            if (mensaje == JOptionPane.YES_OPTION) {

                con.BorrarDatos("producto", "cod_producto", this.codigo.getText());
                limpiar_grilla();
                cargar_grilla();
                cancelar.doClick();

            }
        }
    }//GEN-LAST:event_borrarActionPerformed

    private void modificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modificarActionPerformed
        if (this.codigo.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Debe seleccionar un dato de la tabla para editar..");
        } else {
            operacion = 2;

            cbotp.setEnabled(true);
            cbotp.requestFocus();
        }

    }//GEN-LAST:event_modificarActionPerformed

    private void guardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarActionPerformed
        int mensaje = JOptionPane.showConfirmDialog(this, "Deseas Confirmar la acción", "Atención", JOptionPane.YES_NO_OPTION);
        if (mensaje == JOptionPane.YES_OPTION) {
            this.guardar();
            this.limpiar_grilla();
            this.cargar_grilla();
            this.deshab_botones(2);
            this.deshab_inicio();
            limpiar_txt();

        }
    }//GEN-LAST:event_guardarActionPerformed

    private void cancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelarActionPerformed
        this.deshab_botones(2);
        this.deshab_inicio();
        limpiar_txt();
    }//GEN-LAST:event_cancelarActionPerformed

    private void salirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salirActionPerformed
        int mensaje = JOptionPane.showConfirmDialog(this, "Deseas Salir", "Atención", JOptionPane.YES_NO_OPTION);
        if (mensaje == JOptionPane.YES_OPTION) {

            dispose();//salir completamente del sistema
            //   dispose();//cerrar ventana pero el sistema sigue ejecutandose
        }
    }//GEN-LAST:event_salirActionPerformed

    private void btnbuscarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnbuscarKeyPressed
        limpiar_grilla();
        this.buscar();
    }//GEN-LAST:event_btnbuscarKeyPressed

    private void btnbuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnbuscarActionPerformed
        limpiar_grilla();
        this.buscar();
    }//GEN-LAST:event_btnbuscarActionPerformed

    private void buscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarActionPerformed
        this.btnbuscar.setEnabled(true);
        btnbuscar.requestFocus();
    }//GEN-LAST:event_buscarActionPerformed

    private void precioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_precioActionPerformed
        guardar.setEnabled(true);
        guardar.requestFocus();
    }//GEN-LAST:event_precioActionPerformed

    private void precioKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_precioKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_precioKeyPressed

    private void precioKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_precioKeyTyped
        int k = evt.getKeyChar();
        if ((k >= 32 && k <= 45) || (k >= 58 && k <= 126)) {
            evt.setKeyChar((char) KeyEvent.VK_CLEAR);//limpia inmediatamente al tipear una letra
            getToolkit().beep();///el sonido del error
            JOptionPane.showMessageDialog(null, "No puede ingresar letras");
            precio.requestFocus();
        }
    }//GEN-LAST:event_precioKeyTyped

    private void cboumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboumActionPerformed
       
    }//GEN-LAST:event_cboumActionPerformed

    private void cbotpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbotpActionPerformed
       
    }//GEN-LAST:event_cbotpActionPerformed

    private void grillaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_grillaMouseClicked
        verdatos();
    }//GEN-LAST:event_grillaMouseClicked

    private void cbotpMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cbotpMouseClicked

    }//GEN-LAST:event_cbotpMouseClicked

    private void cboumMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cboumMousePressed

    }//GEN-LAST:event_cboumMousePressed

    private void cbotpMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cbotpMousePressed

    }//GEN-LAST:event_cbotpMousePressed

    private void cbotpKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cbotpKeyPressed
        if(evt.getKeyCode() == 10){
            cbotp.setEnabled(false);
            this.cboum.setEnabled(true);
            this.cboum.requestFocus();
        }
    }//GEN-LAST:event_cbotpKeyPressed

    private void cboumKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cboumKeyPressed
        if(evt.getKeyCode() == 10){
            this.cboum.setEnabled(false);
            descrip.setEnabled(true);
            this.descrip.requestFocus();
        }
    }//GEN-LAST:event_cboumKeyPressed

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Producto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Producto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Producto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Producto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Producto dialog = new Producto(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    private void deshab_inicio() {
        this.codigo.setEnabled(false);
        // this.descrip.setEnabled(false);
        this.guardar.setEnabled(false);
    }

    private void deshab_botones(int a) {
        switch (a) {
            case 1:
                this.agregar.setEnabled(false);
                this.modificar.setEnabled(false);
                this.borrar.setEnabled(false);
                this.salir.setEnabled(false);
                break;
            case 2:
                this.agregar.setEnabled(true);
                this.modificar.setEnabled(true);
                this.borrar.setEnabled(true);
                this.salir.setEnabled(true);
                break;
        }
    }

    private void limpiar_txt() {
        codigo.setText("");
        descrip.setText("");
        precio.setText("");

    }

    private void generar_codigo() {
        try {
            String sql = "SELECT COALESCE (max(cod_producto),0)+1 as cod from producto;";
            rs = con.Listar(sql);//devolver en rs el resultado del primer registro
            rs.next();//devuelve todos los valores del resultado
            this.codigo.setText(rs.getString("cod"));
        } catch (SQLException ex) {
            Logger.getLogger(Producto.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void guardar() {
        if (operacion == 1) {
            con.insertar_datos("producto", "cod_producto,cod_tipo_prod,id_u_medida,"
                    + "p_descrip,precio",
                    this.codigo.getText() + ","
                    + "(select split_part('" + cbotp.getSelectedItem() + "','-',1)::integer),"
                    + "(select split_part('" + cboum.getSelectedItem() + "','-',1)::integer),'"
                    + this.descrip.getText().toUpperCase() + "','"
                    + this.precio.getText() + "'", 1);
            this.cancelar.doClick();
            limpiar_grilla();
            cargar_grilla();
        }
        if (operacion == 2) {

            con.actualizar_datos("producto", "cod_tipo_prod="
                    + "(select split_part('" + cbotp.getSelectedItem() + "','-',1)::integer),"
                    + " id_u_medida="
                    + "(select split_part('" + cboum.getSelectedItem() + "','-',1)::integer),"
                    + "p_descrip='" + descrip.getText().toUpperCase() + "'," + "precio=" + precio.getText() + "",
                    " cod_producto=" + this.codigo.getText(), 1);

            this.cancelar.doClick();
            limpiar_grilla();
            cargar_grilla();
        }
    }

    private void cargar_grilla() {
        try {
            cursor = (DefaultTableModel) grilla.getModel();//asingar cursor a la tabla
            String sql = "select a.cod_producto,b.cod_tipo_prod, b.t_p_descrip, c.id_u_medida, c.u_descrip, a.p_descrip, a.precio\n"
                    + "from producto a, tipo_producto b, u_medida c\n"
                    + "where a.cod_tipo_prod=b.cod_tipo_prod and a.id_u_medida=c.id_u_medida order by cod_producto";//consulta p cargar tabla
            rs = con.Listar(sql);// guarda los resultados del select en rs

            String[] fila = new String[7];//definir array para guardar los id y descrip de la consulta

            while (rs.next()) {//va a cargar con los valores del resultado (rs) optenido en la consulta
                fila[0] = rs.getString("cod_producto");//datos de la fila 0= id's
                fila[1] = rs.getString("cod_tipo_prod"); //datos de la fila las descrip's
                fila[2] = rs.getString("t_p_descrip");//datos de la fila 0= id's
                fila[3] = rs.getString("id_u_medida"); //datos de la fila las descrip's
                fila[4] = rs.getString("u_descrip");//datos de la fila 0= id's
                fila[5] = rs.getString("p_descrip"); //datos de la fila las descrip's
                fila[6] = rs.getString("precio");
                cursor.addRow(fila);//cargar en con el cursor los valores en la tabla
            }
        } catch (SQLException ex) {
            Logger.getLogger(Producto.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void limpiar_grilla() {
        cursor = (DefaultTableModel) grilla.getModel();//asignar el cursor a la tabla

        while (cursor.getRowCount() > 0) { //contar la cantidad de elementos hasta 0
            cursor.removeRow(0);//eliminar datos hasta que se quede en 0
        }
    }

   
    private void verdatos() {

        int fila = grilla.getSelectedRow();
        codigo.setText(grilla.getValueAt(fila, 0).toString());
        this.cbotp.removeAllItems();//primero limpiar el combo
        this.cboum.removeAllItems();//primero limpiar el combo

        this.llenar_combo_t_p(grilla.getValueAt(fila, 1).toString());//llenar el combo para visualizar lo seleccionado
        this.llenar_combo_um(grilla.getValueAt(fila, 3).toString());//llenar el combo para visualizar lo seleccionado
        descrip.setText(grilla.getValueAt(fila, 5).toString());
        precio.setText(grilla.getValueAt(fila, 6).toString());

        //pasar paremetros al combo para que muestre valor seleccionado
    }

    private void buscar() {
        try {
            cursor = (DefaultTableModel) this.grilla.getModel();//asignacion del modelo de la tabla al cursor creado
            String sql = "select a.cod_producto,b.cod_tipo_prod, b.t_p_descrip, c.id_u_medida, c.u_descrip, a.p_descrip, a.precio\n"
                    + "from producto a, tipo_producto b, u_medida c\n"
                    + "where a.cod_tipo_prod=b.cod_tipo_prod and a.id_u_medida=c.id_u_medida and p_descrip like '%" + buscar.getText().toUpperCase() + "%' order by cod_producto";
            rs = con.Listar(sql);
            String[] fila1 = new String[7];//definimos la cantidad que poseera el array[]

            while (rs.next()) {
                fila1[0] = rs.getString("cod_producto");//datos de la fila 0= id's
                fila1[1] = rs.getString("cod_tipo_prod"); //datos de la fila las descrip's
                fila1[2] = rs.getString("t_p_descrip");//datos de la fila 0= id's
                fila1[3] = rs.getString("id_u_medida"); //datos de la fila las descrip's
                fila1[4] = rs.getString("u_descrip");//datos de la fila 0= id's
                fila1[5] = rs.getString("p_descrip"); //datos de la fila las descrip's
                fila1[6] = rs.getString("precio");
                cursor.addRow(fila1);//agrega filas mientras que exista datos
            }
        } catch (SQLException ex) {
            Logger.getLogger(deposito.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void validar_descripcion() {
        try {
            rs = con.Listar("SELECT * FROM u_medida WHERE u_descrip = '"
                    + this.descrip.getText().toUpperCase() + "'");
            boolean encontro = rs.next();
            if (encontro == true) {
                JOptionPane.showMessageDialog(null, "El producto   "
                        + descrip.getText() + "   ya se encuentra registrada");
                // this.habilitar(1);
            } else {
                guardar();
            }
        } catch (SQLException ex) {
            Logger.getLogger(deposito.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void llenar_combo_t_p(String orden) {
        try {
            rs = con.Listar("select concat(cod_tipo_prod,'-',t_p_descrip) "
                    + "as depar from tipo_producto order by cod_tipo_prod=" + orden + " desc");
            if (rs.isBeforeFirst()) {
                while (rs.next()) {
                    cbotp.addItem(rs.getString("depar"));
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(Producto.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void llenar_combo_um(String orden) {
        try {
            rs = con.Listar("select concat(id_u_medida,'-',u_descrip) "
                    + "as depar from u_medida order by id_u_medida=" + orden + " desc");
            if (rs.isBeforeFirst()) {
                while (rs.next()) {
                    cboum.addItem(rs.getString("depar"));
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(Producto.class.getName()).log(Level.SEVERE, null, ex);
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton agregar;
    private javax.swing.JButton borrar;
    private javax.swing.JToggleButton btnbuscar;
    private javax.swing.JTextField buscar;
    private javax.swing.JButton cancelar;
    private javax.swing.JComboBox cbotp;
    private javax.swing.JComboBox cboum;
    private org.edisoncor.gui.textField.TextFieldRectBackground codigo;
    private org.edisoncor.gui.textField.TextFieldRectBackground descrip;
    private javax.swing.JTable grilla;
    private javax.swing.JButton guardar;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private org.edisoncor.gui.label.LabelMetric labelMetric1;
    private org.edisoncor.gui.label.LabelMetric labelMetric2;
    private org.edisoncor.gui.label.LabelMetric labelMetric3;
    private org.edisoncor.gui.label.LabelMetric labelMetric4;
    private org.edisoncor.gui.label.LabelMetric labelMetric5;
    private javax.swing.JButton modificar;
    private org.edisoncor.gui.panel.PanelCurves panelCurves1;
    private org.edisoncor.gui.panel.PanelNice panelNice1;
    private org.edisoncor.gui.textField.TextFieldRectBackground precio;
    private org.edisoncor.gui.button.ButtonNice salir;
    // End of variables declaration//GEN-END:variables
}
